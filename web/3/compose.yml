services:
  database:
    image: "postgres:18.0-alpine3.22"
    environment:
      - POSTGRES_HOST
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - ./src/main/resources/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql:/var/lib/postgresql/18/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
  wildfly:
    image: quay.io/wildfly/wildfly:28.0.0.Final-jdk20
    environment:
      - POSTGRES_HOST
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - ./src/main/resources/wildfly/standalone.xml:/opt/jboss/wildfly/standalone/configuration/standalone.xml
      - ./target:/opt/jboss/wildfly/standalone/deployments/
      - ./public:/opt/jboss/wildfly/resources
    networks:
      - backend
    ports:
      - "8529:8529"
    depends_on:
      database:
        condition: service_healthy

networks:
  backend: {}